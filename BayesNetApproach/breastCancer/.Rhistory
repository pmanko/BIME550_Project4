final_dag <- set.arc(final_dag, from='tumor_size', to='masectomy')
final_dag
model2network("[age][tumor_size][inv_nodes][family_history_bc][overall_health][bmi][tumor_histology][er_status][pr_status][her2_status][21_gene_assay_rec_risk][primary_tumor_class][regional_lymph_class][pathologic_lymph_class][metastasis_class]
[cancer_stage][histological_grade][radiation_therapy][endocrine_therapy][chemotherapy][physical_function][sexual_function][coping][cognitive_function][social_support][menopause|age][node_caps|inv_nodes][masectomy|tumor_size]
[lumpectomy|tumor_size][breast_reconstruction|age][anxiety|social_support][deg_malig|node_caps][irradiat|node_caps][body_image|masectomy][fertility|age:menopause][recurrance|deg_malig]")
model2network("[age][tumor_size][inv_nodes][family_history_bc][overall_health|age:bmi][bmi|age][tumor_histology][er_status][pr_status][her2_status][21_gene_assay_rec_risk|er_status:pr_status:her2_status:family_history_bc][primary_tumor_class|tumor_size][regional_lymph_class|inv_nodes:node_caps][pathologic_lymph_class|inv_nodes:node_caps][metastasis_class|pathologic_lymph_class:tumor_histology:regional_lymph_class]
[cancer_stage][histological_grade][radiation_therapy][endocrine_therapy][chemotherapy][physical_function][sexual_function][coping][cognitive_function][social_support][menopause|age][node_caps|inv_nodes][masectomy|tumor_size]
[lumpectomy|tumor_size][breast_reconstruction|age][anxiety|social_support][deg_malig|node_caps][irradiat|node_caps][body_image|masectomy][fertility|age:menopause][recurrance|deg_malig]"
)
warnings()
graphviz.plot(final_dag, layout = 'neato', shape='ellipse')
graphviz.plot(final_dag, layout = 'neato', shape='ellipse')
fd2 <- model2network("[age][tumor_size][inv_nodes][family_history_bc][overall_health|age:bmi][bmi|age][tumor_histology][er_status][pr_status][her2_status][21_gene_assay_rec_risk|er_status:pr_status:her2_status:family_history_bc][primary_tumor_class|tumor_size][regional_lymph_class|inv_nodes:node_caps][pathologic_lymph_class|inv_nodes:node_caps][metastasis_class|pathologic_lymph_class:tumor_histology:regional_lymph_class]
[cancer_stage][histological_grade][radiation_therapy][endocrine_therapy][chemotherapy][physical_function][sexual_function][coping][cognitive_function][social_support][menopause|age][node_caps|inv_nodes][masectomy|tumor_size]
[lumpectomy|tumor_size][breast_reconstruction|age][anxiety|social_support][deg_malig|node_caps][irradiat|node_caps][body_image|masectomy][fertility|age:menopause][recurrance|deg_malig]"
)
graphviz.plot(fd2, layout = 'neato', shape='ellipse')
graphviz.plot(fd2, layout = 'dot', shape='ellipse')
fd2
fd2
model2network("
[age][cancer_stage][chemotherapy][cognitive_function][coping|anxiety:social_support:recurrance:body_image][endocrine_therapy][er_status][family_history_bc][her2_status]
[histological_grade][inv_nodes][physical_function][pr_status][radiation_therapy][sexual_function|menopause:masectomy:breast_reconstruction][social_support|masectomy:breast_reconstruction:recurrance:fertility]
[tumor_histology][tumor_size][21_gene_assay_rec_risk|er_status:family_history_bc:her2_status:pr_status][anxiety|social_support]
[bmi|age][breast_reconstruction|age][lumpectomy|tumor_size][masectomy|tumor_size][menopause|age][node_caps|inv_nodes]
[primary_tumor_class|tumor_size][body_image|masectomy][deg_malig|node_caps][fertility|age:menopause][irradiat|node_caps]
[overall_health|age:bmi][pathologic_lymph_class|inv_nodes:node_caps][regional_lymph_class|inv_nodes:node_caps]
[metastasis_class|pathologic_lymph_class:regional_lymph_class:histological_grade][recurrance|deg_malig]
")
fd3 <- model2network("
[age][cancer_stage][chemotherapy][cognitive_function][coping|anxiety:social_support:recurrance:body_image][endocrine_therapy][er_status][family_history_bc][her2_status]
[histological_grade][inv_nodes][physical_function][pr_status][radiation_therapy][sexual_function|menopause:masectomy:breast_reconstruction][social_support|masectomy:breast_reconstruction:recurrance:fertility]
[tumor_histology][tumor_size][21_gene_assay_rec_risk|er_status:family_history_bc:her2_status:pr_status][anxiety|social_support]
[bmi|age][breast_reconstruction|age][lumpectomy|tumor_size][masectomy|tumor_size][menopause|age][node_caps|inv_nodes]
[primary_tumor_class|tumor_size][body_image|masectomy][deg_malig|node_caps][fertility|age:menopause][irradiat|node_caps]
[overall_health|age:bmi][pathologic_lymph_class|inv_nodes:node_caps][regional_lymph_class|inv_nodes:node_caps]
[metastasis_class|pathologic_lymph_class:regional_lymph_class:histological_grade][recurrance|deg_malig]
")
graphviz.plot(fd3, layout = 'dot', shape='ellipse')
fd3
fd4 <- model2network("[age][cancer_stage|histological_grade:metastasis_class:primary_tumor_class:regional_lymph_class:pathologic_lymph_class][chemotherapy][cognitive_function][endocrine_therapy][er_status][family_history_bc][her2_status]
[histological_grade][inv_nodes][physical_function][pr_status][tumor_histology][tumor_size]
[21_gene_assay_rec_risk|er_status:family_history_bc:her2_status:pr_status][bmi|age][breast_reconstruction|age]
[lumpectomy|tumor_size][masectomy|tumor_size][menopause|age][node_caps|inv_nodes][primary_tumor_class|tumor_size]
[body_image|masectomy][deg_malig|node_caps][fertility|age:menopause][irradiat|node_caps][overall_health|age:bmi]
[pathologic_lymph_class|inv_nodes:node_caps][regional_lymph_class|inv_nodes:node_caps]
[sexual_function|breast_reconstruction:masectomy:menopause]
[metastasis_class|histological_grade:pathologic_lymph_class:regional_lymph_class][recurrance|irradiat:deg_malig:cancer_stage:chemotherapy:endocrine_therapy:21_gene_assay_rec_risk:histological_grade]
[social_support|breast_reconstruction:fertility:masectomy:recurrance][anxiety|social_support]
[coping|anxiety:body_image:recurrance:social_support]")
graphviz.plot(fd4, layout = 'dot', shape='ellipse')
fd4
t5 <- model2network("[age][chemotherapy|overall_health:cancer_stage][endocrine_therapy|overall_health:cancer_stage:er_status:her2_status:pr_status][er_status][family_history_bc][her2_status][histological_grade|tumor_histology]
[inv_nodes][physical_function|recurrance:chemotherapy:lumpectomy:masectomy][pr_status][tumor_histology][tumor_size]
[21_gene_assay_rec_risk|er_status:family_history_bc:her2_status:pr_status][bmi|age][breast_reconstruction|age]
[lumpectomy|tumor_size:age:overall_health][masectomy|tumor_size:age:overall_health][menopause|age][node_caps|inv_nodes][primary_tumor_class|tumor_size]
[body_image|masectomy][deg_malig|node_caps][fertility|age:menopause][irradiat|node_caps:overall_health:cancer_stage][overall_health|age:bmi]
[pathologic_lymph_class|inv_nodes:node_caps][regional_lymph_class|inv_nodes:node_caps]
[sexual_function|breast_reconstruction:masectomy:menopause:physical_function]
[metastasis_class|histological_grade:pathologic_lymph_class:regional_lymph_class]
[cancer_stage|histological_grade:metastasis_class:pathologic_lymph_class:primary_tumor_class:regional_lymph_class]
[recurrance|21_gene_assay_rec_risk:cancer_stage:chemotherapy:deg_malig:endocrine_therapy:histological_grade:irradiat:lumpectomy:masectomy]
[social_support|breast_reconstruction:fertility:masectomy:recurrance][anxiety|social_support]
[coping|anxiety:body_image:recurrance:social_support:sexual_function]")
graphviz.plot(t5, layout = 'dot', shape='ellipse')
t5
final_dag <- model2network("[age][er_status][family_history_bc][her2_status][inv_nodes][pr_status][tumor_histology][tumor_size]
[21_gene_assay_rec_risk|er_status:family_history_bc:her2_status:pr_status][bmi|age][breast_reconstruction|age]
[histological_grade|tumor_histology][menopause|age][node_caps|inv_nodes][primary_tumor_class|tumor_size][deg_malig|node_caps]
[fertility|age:menopause:chemotherapy][overall_health|age:bmi][pathologic_lymph_class|inv_nodes:node_caps]
[regional_lymph_class|inv_nodes:node_caps][lumpectomy|age:overall_health:tumor_size][masectomy|age:overall_health:tumor_size]
[metastasis_class|histological_grade:pathologic_lymph_class:regional_lymph_class][body_image|masectomy]
[cancer_stage|histological_grade:metastasis_class:pathologic_lymph_class:primary_tumor_class:regional_lymph_class]
[chemotherapy|cancer_stage:overall_health][endocrine_therapy|cancer_stage:er_status:her2_status:overall_health:pr_status]
[irradiat|cancer_stage:node_caps:overall_health]
[recurrance|21_gene_assay_rec_risk:cancer_stage:chemotherapy:deg_malig:endocrine_therapy:histological_grade:irradiat:lumpectomy:masectomy]
[physical_function|chemotherapy:lumpectomy:masectomy:recurrance]
[social_support|breast_reconstruction:fertility:masectomy:recurrance][anxiety|social_support]
[sexual_function|breast_reconstruction:masectomy:menopause:physical_function]
[coping|anxiety:body_image:recurrance:sexual_function:social_support]")
final.bn.bayes1 <- bn.fit(final_dag, data=sample_data, method='bayes', iss=10)
sample_data
sample_data[sample_data==NA]
DT[is.na(x),]
sample_data[is.na(x),]
DT[J(NA_character_)]
sample_data[J(NA_character_)]
View(sample_data)
sample_data[cancer_stage==NA, cancer_stage:='IIA']
sample_data[is.na(cancer_stage), cancer_stage:='IIA']
final.bn.bayes1 <- bn.fit(final_dag, data=sample_data, method='bayes', iss=10)
for (j in colnames(sample_data)) set(sample_data, j = j, value = factor(dt[[j]]))
for (j in colnames(sample_data)) set(sample_data, j = j, value = factor(sample_data[[j]]))
final.bn.bayes1 <- bn.fit(final_dag, data=sample_data, method='bayes', iss=10)
sample_data[,final_dag$nodes]
sample_data[,(final_dag$nodes)]
sample_data[, ..final_dag$nodes]
sample_data[, .SD, .SDcols=final_dag$nodes]
final_dag$nodes - colnames(sample_data)
colnames(sample_data)
final_dag$nodes
nodes(final_dag)
sample_data[,(nodes(final_dag))]
sample_data
nodes(final_dag) - colnames(sample_data)
nodes(final_dag)
colnames(sample_data)
colnames(sample_data) - nodes(final_dag)
colnames(sample_data) not nodes(final_dag)
colnames(sample_data) ^ nodes(final_dag)
colnames(sample_data) & nodes(final_dag)
setdiff(colnames(sample_data), nodes(final_dag))
remove_cols <- setdiff(colnames(sample_data), nodes(final_dag))
sample_data[,(remove_cols):=NULL]
final.bn.bayes1 <- bn.fit(final_dag, data=sample_data, method='bayes', iss=10)
final.bn.bayes1
save.image("C:/Users/piotr/Google Drive/BIME 550/Project4/code/BayesNetApproach/breastCancer/zzzzzzzzzz.RData")
arc.strength(final_dag, data=sample_data, criterion = "x2")
library(gridExtra)
grid.table(arc.strength(final_dag, data=sample_data, criterion = "x2"))
grid.table(arc.strength(final_dag, data=sample_data, criterion = "x2"))
?grid.table
library(grid)
g <- tableGrob(arc.strength(final_dag, data=sample_data, criterion = "x2"), theme=ttheme_minmal())
g <- tableGrob(arc.strength(final_dag, data=sample_data, criterion = "x2"), theme=ttheme_minimal())
grid.newpage()
grid.draw(g)
g <- tableGrob(arc.strength(final_dag, data=sample_data, criterion = "x2")[1:20], theme=ttheme_minimal())
as <- arc.strength(final_dag, data=sample_data, criterion = "x2")
as
as[1:10,]
g <- tableGrob(as[1:15], theme=ttheme_minimal())
g <- tableGrob(as[1:15,], theme=ttheme_minimal())
grid.newpage()
grid.draw(g)
score(final_dag, data=sample_data)
score(final_dag, data=sample_data, type='bic')
library(bnlearn)
score(final_dag, data=sample_data, type='bic')
final_dag
library(bnlearn)
library(graph)
library(Rgraphviz)
library(RBGL)
library(gRain)
final_dag
graphviz.plot(final_dag, layout='dot')
graphviz.plot(final_dag, layout='dot', shape='ellipse')
graphviz.plot(final_dag, layout='dot', shape='ellipse')
score(final_dag, data=sample_data)
final_dag
junction <- compile(as.grain(final_dag))
final_dag <- model2network("[age][er_status][family_history_bc][her2_status][inv_nodes][pr_status][tumor_histology][tumor_size]
[21_gene_assay_rec_risk|er_status:family_history_bc:her2_status:pr_status][bmi|age][breast_reconstruction|age]
[histological_grade|tumor_histology][menopause|age][node_caps|inv_nodes][primary_tumor_class|tumor_size][deg_malig|node_caps]
[fertility|age:menopause:chemotherapy][overall_health|age:bmi][pathologic_lymph_class|inv_nodes:node_caps]
[regional_lymph_class|inv_nodes:node_caps][lumpectomy|age:overall_health:tumor_size][masectomy|age:overall_health:tumor_size]
[metastasis_class|histological_grade:pathologic_lymph_class:regional_lymph_class][body_image|masectomy]
[cancer_stage|histological_grade:metastasis_class:pathologic_lymph_class:primary_tumor_class:regional_lymph_class]
[chemotherapy|cancer_stage:overall_health][endocrine_therapy|cancer_stage:er_status:her2_status:overall_health:pr_status]
[irradiat|cancer_stage:node_caps:overall_health]
[recurrance|21_gene_assay_rec_risk:cancer_stage:chemotherapy:deg_malig:endocrine_therapy:histological_grade:irradiat:lumpectomy:masectomy]
[physical_function|chemotherapy:lumpectomy:masectomy:recurrance]
[social_support|breast_reconstruction:fertility:masectomy:recurrance][anxiety|social_support]
[sexual_function|breast_reconstruction:masectomy:menopause:physical_function]
[coping|anxiety:body_image:recurrance:sexual_function:social_support]")
final.bn.bayes1 <- bn.fit(final_dag, data=sample_data, method='bayes', iss=10)
junction <- compile(as.grain(final.bn.bayes1))
final.bn.bayes1
junction <- compile(as.grain(final.bn.bayes1))
final.bn <- bn.fit(final_dag, data=sample_data, method='mle')
final.bn
junction <- compile(as.grain(final.bn.bayes1))
cpquery(final.bn, event=(recurrance == 'no-recurrance-event'), evidence= (chemotherapy == 'yes') )
final.bn$recurrance
?bn.fit
sample_data
sample_data$fertility
sample_data$menopause
final_dag
score(final.bn)
bn.fit
?bn.fit
final.bn$age
final.bn$bmi
junction <- compile(as.grain(final.bn))
junction <- compile(as.grain(final.bn), debug=TRUE)
as.grain(final.bn)
as.grain
as.grain
?as.grain
final.bn <- bn.fit(final_dag, data=sample_data, method='bayes', iss=2)
junction <- compile(as.grain(final.bn))
final.bn
final.bn$anxiety
final.bn$cancer_stage
final.bn$irradiat
tableGrob(final.bn$irradiat)
final.bn$irradiat
final.bn$cancer_stage
final.bn$deg_malig
final.bn$irradiat
cpquery(final.bn, event = (irradiat == 'yes'), evidence = (node_caps == 'yes' & overall_health == 'poor' & cancer_stage == 'IV'))
cpquery(final.bn, event = (irradiat == 'yes'), evidence = (node_caps == 'no' & overall_health == 'poor' & cancer_stage == 'IV'))
IxNxSxO <- cpdist(final.bn, nodes=c('irradiat', 'node_caps', 'cancer_stage', 'overall_health'))
IxNxSxO <- cpdist(final.bn, nodes=c('irradiat', 'node_caps', 'cancer_stage', 'overall_health'),  evidence = (node_caps == 'yes' & overall_health == 'poor' & cancer_stage == 'IV'))
IxNxSxO
prop_table(table(IxNxSxO))
prop.table(table(IxNxSxO))
IxNxSxO <- cpdist(final.bn, nodes=c('irradiat', 'recurrance'),  evidence = (node_caps == 'yes' & overall_health == 'poor' & cancer_stage == 'IV'))
prop.table(table(IxNxSxO))
IxR <- cpdist(final.bn, nodes=c('irradiat', 'recurrance'),  evidence = (node_caps == 'yes' & overall_health == 'poor' & cancer_stage == 'IV'))
table(IxR)
prop.table(table(IxNxSxO))
IxR
head(IxR)
clear()
IxR <- cpdist(final.bn, nodes=c('irradiat', 'recurrance'),  evidence = (node_caps == 'yes' & overall_health == 'poor' & cancer_stage == 'IV'))
head(IxR)
prop.table(table(IxNxSxO))
cpquery(final.bn, event = (irradiat == 'yes'), evidence = (node_caps == 'yes' & overall_health == 'poor' & cancer_stage == 'IV'))
cpquery(final.bn, event = (irradiat == 'yes'), evidence = (node_caps == 'no' & overall_health == 'poor' & cancer_stage == 'IV'))
IxR <- cpdist(final.bn, nodes=c('irradiat', 'recurrance'),  evidence = (node_caps == 'yes' & overall_health == 'poor' & cancer_stage == 'IV'))
head(IxR)
prop.table(table(IxNxSxO))
?prop.table
cpquery(final.bn, event = (irradiat == 'yes'), evidence = (node_caps == 'yes' & overall_health == 'poor' & cancer_stage == 'IV'))
cpquery(final.bn, event = (irradiat == 'yes'), evidence = (node_caps == 'yes' & overall_health == 'poor' & cancer_stage == 'IV'))
# Inference
cpquery(final.bn, event = (irradiat == 'yes'), evidence = (node_caps == 'yes' & overall_health == 'poor' & cancer_stage == 'IV'))
cpquery(final.bn, event = (irradiat == 'yes'), evidence = (node_caps == 'no' & overall_health == 'poor' & cancer_stage == 'IV'))
# Creates table with all observations that match the given evidence
IxR <- cpdist(final.bn, nodes=c('irradiat', 'recurrance'),  evidence = (node_caps == 'yes' & overall_health == 'poor' & cancer_stage == 'IV'))
head(IxR)
# Gives overview of the frequencies in the produced table
prop.table(table(IxNxSxO))
# Inference
cpquery(final.bn, event = (irradiat == 'yes'), evidence = (node_caps == 'yes' & overall_health == 'poor' & cancer_stage == 'IV'))
cpquery(final.bn, event = (irradiat == 'yes'), evidence = (node_caps == 'no' & overall_health == 'poor' & cancer_stage == 'IV'))
# Creates table with all observations that match the given evidence
IxR <- cpdist(final.bn, nodes=c('irradiat', 'recurrance'),  evidence = (node_caps == 'yes' & overall_health == 'poor' & cancer_stage == 'IV'))
head(IxR)
# Gives overview of the frequencies in the produced table
prop.table(table(IxNxSxO))
graphviz.plot(learned_dag_tabu, layout='circo', shape='ellipse')
mplot(learned_wpbc_dag_tabu)
graphviz.plot(learned_wpbc_dag_tabu, shape='ellipse', layout='circo')
graphviz.plot(learned_wpbc_dag_tabu, shape='ellipse', layout='neato')
graphviz.plot(learned_wpbc_dag_tabu, shape='ellipse', layout='fdp')
graphviz.plot(learned_wpbc_dag_tabu, shape='ellipse', layout='dot')
graphviz.plot(learned_wpbc_dag_tabu, shape='ellipse', layout='dot')
learned_wpbc_dag <- rsmax2(wpbc_d, restrict = "si.hiton.pc", test = "x2", maximize = "tabu", score = "bde", maximize.args = list(iss = 5), alpha = 0.25)
graphviz.plot(learned_wpbc_dag, shape='ellipse', layout='dot')
learned_wpbc_dag <- rsmax2(wpbc_d, restrict = "si.hiton.pc", test = "x2", maximize = "tabu", score = "bde", maximize.args = list(iss = 5), alpha = 0.1)
graphviz.plot(learned_wpbc_dag, shape='ellipse', layout='dot')
learned_wpbc_dag <- rsmax2(wpbc_d, restrict = "si.hiton.pc", test = "x2", maximize = "tabu", score = "bde", maximize.args = list(iss = 5), alpha = 0.01)
graphviz.plot(learned_wpbc_dag, shape='ellipse', layout='dot')
learned_wpbc_dag <- rsmax2(wpbc_d, restrict = "si.hiton.pc", test = "x2", maximize = "tabu", score = "bde", maximize.args = list(iss = 5), alpha = 0.05)
graphviz.plot(learned_wpbc_dag, shape='ellipse', layout='dot')
mplot(learned_recurrance_dag_tabu)
learned_dag_risk <- rsmax2(risk_subset, restrict = "si.hiton.pc", test = "x2", maximize = "tabu", score = "bde", maximize.args = list(iss = 5), alpha = 0.0001)
graphviz.plot(learned_dag_risk_factor, shape='ellipse')
learned_dag_risk_factor <- rsmax2(risk_factor_subset, restrict = "si.hiton.pc", test = "x2", maximize = "tabu", score = "bde", maximize.args = list(iss = 10))
graphviz.plot(learned_dag_risk_factor, shape='ellipse')
learned_dag_risk <- rsmax2(risk_subset, restrict = "si.hiton.pc", test = "x2", maximize = "tabu", score = "bde", maximize.args = list(iss = 10))
mplot(learned_dag_risk)
learned_dag_risk <- rsmax2(risk_subset, restrict = "si.hiton.pc", test = "x2", maximize = "tabu", score = "bde", maximize.args = list(iss = 10), alpha = .001)
mplot(learned_dag_risk)
learned_dag_risk <- rsmax2(risk_subset, restrict = "si.hiton.pc", test = "x2", maximize = "tabu", score = "bde", maximize.args = list(iss = 10), alpha = .1)
mplot(learned_dag_risk)
learned_dag_tabu <- tabu(wisconsin_d, debug=TRUE)
learned_recurrance_dag <- hc(recurrance, perturb = 100, restart=100)
dag1 <- learned_dag_tabu
dag2 <- learned_recurrance_dag
graphviz.plot(dag1, layout='circo', shape='ellipse')
graphviz.plot(dag2, layout='dot', shape='ellipse')
print(dag1)
print(dag2)
graphviz.plot(dag1, layout='circo', shape='ellipse')
graphviz.plot(dag2, layout='dot', shape='ellipse')
print(arc.strength(dag1, data = evidence1, criterion='x2')) # Pearson's X^2 test for contigency tables (p-value)
print(arc.strength(dag2, data = evidence2, criterion='x2')) # Pearson's X^2 test for contigency tables (p-value)
bn.mle1 <- bn.fit(dag1, data=evidence1, method='mle')
bn.bayes2 <- bn.fit(dag2, data=evidence2, method='bayes', iss=10)
plot(junction1)
junction1 <- compile(as.grain(bn.mle1))
junction2 <- compile(as.grain(bn.bayes2))
querygrain(junction2, nodes='irradiat') # general prob dist around 75/25%
querygrain(junction2, nodes='irradiat') # general prob dist around 75/25%
print(arc.strength(dag1, data = evidence1, criterion='x2')) # Pearson's X^2 test for contigency tables (p-value)
wisconsin
wisconsin$clump_thickness
?setEvidence
wisconsin$class
querygrain(junction1, nodes='class')
j_class <- setEvidence(junction1, nodes=c('clump_thickness', 'uniformity_of_cell_shape'), states=list(c('8', '9', '10'), c('7', '8', '9', '10')))
j_class <- setEvidence(junction1, evidence=list('clump_thickness'=c('8', '9', '10'), 'uniformity_of_cell_shape'=c('7', '8', '9', '10'))
# Q: If we know someone had recurrance, what is the probability they had irradiation:
querygrain(junction2, nodes='irradiat') # general prob dist around 75/25%
jreccurance <- setEvidence(junction2, nodes='recurrance', states='recurrence-events') # Set evidence: recurrance happened!
querygrain(jreccurance, nodes='irradiat') # a bit less likely to have had irradiations
# Q: If we know someone had node caps, what are the likely numbers of invasive nodes, likely malignancy, and recurrance?
a1 <- querygrain(junction2, nodes=c('inv_nodes', 'irradiat', 'deg_malig', 'recurrance'))
jnodecaps <- setEvidence(junction2, nodes='node_caps', states='yes')
a2 <- querygrain(jnodecaps, nodes=c('inv_nodes', 'irradiat', 'deg_malig', 'recurrance')) # all of them change...
# For example, here's inv_nodes:
plot(a1$inv_nodes)
plot(a2$inv_nodes)
bn.fit.barchart(bn.mle1$class, main = "Class", xlab = "", ylab = "")
bn.fit.dotplot(bn.mle1$class, main = "Class", xlab = "", ylab = "")
# Approximate Infrerence
# Q: if the cell is very non-uniform in shape, how likely is the tumor to be malignant?
cpquery(bn.mle1, event= (class=='malignant'), evidence=(uniformity_of_cell_shape=='3')) # .4
cpquery(bn.mle1, event= (class=='malignant'), evidence=(uniformity_of_cell_shape=='6')) # .9
cpquery(bn.mle1, event= (class=='malignant'), evidence=(uniformity_of_cell_shape=='1'), n=10^6) # .006
j_class <- setEvidence(junction1, evidence=list('clump_thickness'=c('8', '9', '10'), 'uniformity_of_cell_shape'=c('7', '8', '9', '10')))
j_class <- setEvidence(junction1, evidence=list('clump_thickness'=c('8', '9', '10'), 'uniformity_of_cell_shape'=c('7', '8', '9', '10')))
querygrain(j_class, nodes='class')
j_class <- setEvidence(junction1, evidence=list('clump_thickness'=c('8', '9', '10'), 'uniformity_of_cell_shape'=c('6', '7', '8', '9', '10')))
querygrain(j_class, nodes='class')
j_class <- setEvidence(junction1, evidence=list('clump_thickness'=c('1', '2', '3'), 'uniformity_of_cell_shape'=c('1', '2')))
querygrain(j_class, nodes='class')
j_class <- setEvidence(junction1, evidence=list('clump_thickness'=c('1', '2', '3', '4', '5'), 'uniformity_of_cell_shape'=c('1', '2', '3', '4')))
querygrain(j_class, nodes='class')
j_class2 <- setEvidence(junction1, evidence=list('clump_thickness'=c('1', '2', '3', '4', '5'), 'uniformity_of_cell_shape'=c('1', '2', '3', '4', '5')))
querygrain(j_class, nodes='class')
j_class1 <- setEvidence(junction1, evidence=list('clump_thickness'=c('8', '9', '10'), 'uniformity_of_cell_shape'=c('7', '8', '9', '10')))
querygrain(j_class1, nodes='class')
bn.fit.barchart(j_class1$class, main = "Class", xlab = "", ylab = "")
as.grain()
?as.grain
bn.fit.barchart(as.bn.fit(j_class1)$class, main = "Class", xlab = "", ylab = "")
bn.fit.barchart(bn.mle1$class, main = "Class", xlab = "", ylab = "")
bn.fit.barchart(bn.mle1$class, main = "Class", xlab = "", ylab = "")
bn.fit.barchart(as.bn.fit(j_class1)$class, main = "Class", xlab = "", ylab = "")
querygrain(j_class1, nodes='class')
querygrain(j_class2, nodes='class')
all <- querygrain(junction1, nodes='class')
bn.fit.barchart(bn.mle1$class, main = "Class", xlab = "", ylab = "")
j_class1 <- setEvidence(junction1, evidence=list('clump_thickness'=c('8', '9', '10'), 'uniformity_of_cell_shape'=c('7', '8', '9', '10')))
high <- querygrain(j_class1, nodes='class')
j_class2 <- setEvidence(junction1, evidence=list('clump_thickness'=c('1', '2', '3', '4', '5'), 'uniformity_of_cell_shape'=c('1', '2', '3', '4', '5')))
low <- querygrain(j_class2, nodes='class')
all$class
as.data.table(all)
as.data.table(all$class)
as.data.table(all)
rbind(all, high, low)
as.numeric(all)
typeof(high)
as.vector(high)
all <- as.vector(querygrain(junction1, nodes='class'))
j_class1 <- setEvidence(junction1, evidence=list('clump_thickness'=c('8', '9', '10'), 'uniformity_of_cell_shape'=c('7', '8', '9', '10')))
high <- as.vector(querygrain(j_class1, nodes='class'))
j_class2 <- setEvidence(junction1, evidence=list('clump_thickness'=c('1', '2', '3', '4', '5'), 'uniformity_of_cell_shape'=c('1', '2', '3', '4', '5')))
low <- as.vector(querygrain(j_class2, nodes='class'))
rbind(all, high, low)
as.vector(all)
typeof(all)
typeof(as.vector(all))
unlist(all)
data.table(unlist(all))
as.data.table(unlist(all))
rbind(unlist(all), unlist(low)
)
distr <- rbind(unlist(all), unlist(high), unlist(low))
distr
rbind(all, high, low)
data.table(all)
all <- querygrain(junction1, nodes='class')
as.data.table(all)
all <- as.data.table(prob = all)
all <- querygrain(junction1, nodes='class')
all
all <- as.data.table(list(class=all$class))
all
all <- as.data.table(list(prob=all$class))
all
all <- as.data.table(list(prob=all$class, class=c('benign', 'malignant')))
all
all <- data.table(list(prob=all$class, class=c('benign', 'malignant')))
all
?data.table
all <- data.table(prob=all$class, class=c('benign', 'malignant'))
all <- data.table(prob=unlist(all$class), class=c('benign', 'malignant'))
all$class
all <- querygrain(junction1, nodes='class')
all <- data.table(prob=unlist(all$class), class=c('benign', 'malignant'))
all
all <- data.table(prob=unlist(all$class), class=c('benign', 'malignant'))
all[,ev:='P(class)']
high <- data.table(prob=unlist(high$class), class=c('benign', 'malignant'))
high[,ev:='P(class| clump_thickness >= 8, uniformity_cell_shape >= 7)']
low <- data.table(prob=unlist(low$class), class=c('benign', 'malignant'))
low[,ev:='P(class| clump_thickness <= 5, uniformity_cell_shape <= 5)']
all <- data.table(prob=unlist(all$class), class=c('benign', 'malignant'))
all[,ev:='P(class)']
high <- data.table(prob=unlist(high$class), class=c('benign', 'malignant'))
high[,ev:='P(class| clump_thickness >= 8, uniformity_cell_shape >= 7)']
low <- data.table(prob=unlist(low$class), class=c('benign', 'malignant'))
low[,ev:='P(class| clump_thickness <= 5, uniformity_cell_shape <= 5)']
all <- querygrain(junction1, nodes='class')
j_class1 <- setEvidence(junction1, evidence=list('clump_thickness'=c('8', '9', '10'), 'uniformity_of_cell_shape'=c('7', '8', '9', '10')))
high <- querygrain(j_class1, nodes='class')
j_class2 <- setEvidence(junction1, evidence=list('clump_thickness'=c('1', '2', '3', '4', '5'), 'uniformity_of_cell_shape'=c('1', '2', '3', '4', '5')))
low <- querygrain(j_class2, nodes='class')
all <- data.table(prob=unlist(all$class), class=c('benign', 'malignant'))
all[,ev:='P(class)']
high <- data.table(prob=unlist(high$class), class=c('benign', 'malignant'))
high[,ev:='P(class| clump_thickness >= 8, uniformity_cell_shape >= 7)']
low <- data.table(prob=unlist(low$class), class=c('benign', 'malignant'))
low[,ev:='P(class| clump_thickness <= 5, uniformity_cell_shape <= 5)']
rbind(all, high,low)
distr <- rbind(all, high,low)
barchart(class ~ prob | ev, data = distr,
layout = c(3, 1), xlab = "probability",
scales = list(alternating = 1, tck = c(1, 0)),
panel = function(...) {
panel.barchart(...)
panel.grid(h = 0, v = -1)
})
library(graph)
library(Rgraphviz)
library(ggplot2)
qplot
?qplot
qplot(dist)
?qplot
qplot(x=prob, y=class, facets=ev, data=dist)
distr
qplot(x=prob, y=class, facets=ev ~ ., data=dist)
qplot(x=prob, y=class, data=dist)
qplot(x=prob, y=class, data=dist, geom='bar')
qplot(prob, class, distr, geom='bar')
qplot
distr
?qplot
qplot(prob, class, data=distr, geom='bar')
qplot(prob, class, data=distr)
qplot(prob, class, data=distr, facet=. ~ ev)
qplot(prob, class, data=distr, facets=. ~ ev)
qplot(prob, class, data=distr, facets=ev ~ .)
all <- querygrain(junction1, nodes='class')
# P(class| clump_thickness >= 8, uniformity_cell_shape >= 7)
j_class1 <- setEvidence(junction1, evidence=list('clump_thickness'=c('8', '9', '10'), 'uniformity_of_cell_shape'=c('7', '8', '9', '10')))
high <- querygrain(j_class1, nodes='class')
# P(class| clump_thickness <= 5, uniformity_cell_shape <= 5)
j_class2 <- setEvidence(junction1, evidence=list('clump_thickness'=c('1', '2', '3', '4', '5'), 'uniformity_of_cell_shape'=c('1', '2', '3', '4', '5')))
low <- querygrain(j_class2, nodes='class')
all <- data.table(prob=unlist(all$class), class=c('benign', 'malignant'))
all[,ev:='P(class)']
high <- data.table(prob=unlist(high$class), class=c('benign', 'malignant'))
high[,ev:='P(class| ct >= 8, us >= 7)']
low <- data.table(prob=unlist(low$class), class=c('benign', 'malignant'))
low[,ev:='P(class| ct <= 5, us <= 5)']
distr <- rbind(all, high,low)
qplot(prob, class, data=distr, facets=ev ~ .)
qplot(prob, class, data=distr, facets=ev ~ ., geom='bar')
qplot(prob, class, data=distr, facets=ev ~ .)
qplot(prob, class, data=distr, facets=ev ~ ., geom='col')
qplot(class, prob, data=distr, facets=ev ~ ., geom='col')
qplot(class, prob, data=distr, facets=ev ~ ., geom='col') + coord_flip()
qplot(class, prob, data=distr, facets=ev ~ ., geom='col') + coord_flip() + theme_minimal()
cpquery(bn.mle1, event= (class=='malignant'), evidence=(mitosis=='3')) # .4
cpquery(bn.mle1, event= (class=='malignant'), evidence=(mitosis=='1')) # .4
cpquery(bn.mle1, event= (class=='malignant'), evidence=(marginal_adhesion=='2')) # .4
cpquery(bn.mle1, event= (class=='malignant'), evidence=(marginal_adhesion=='2')) # 0.4
cpquery(bn.mle1, event= (class=='malignant'), evidence=(marginal_adhesion=='6')) # .9
cpquery(bn.mle1, event= (class=='uniformity_of_cell_size'), evidence=(mitosis=='1'), n=10^6) # .006
cpquery(bn.mle1, event= (class=='uniformity_of_cell_size'), evidence=(mitosis=='2'), n=10^6) # .006
cpquery(bn.mle1, event= (class=='uniformity_of_cell_size'), evidence=(mitosis=='5'), n=10^6) # .006
cpquery(bn.mle1, event= (class=='uniformity_of_cell_size'), evidence=(mitosis<'5'), n=10^6) # .006
cpquery(bn.mle1, event= (uniformity_of_cell_size %in% c('1', '2', '3') ), evidence=(mitosis=='2'), n=10^6) # .006
cpquery(bn.mle1, event= (uniformity_of_cell_size %in% c('1', '2', '3') ), evidence=(mitosis=='1'), n=10^6) # .006
cpquery(bn.mle1, event= (uniformity_of_cell_size %in% c('1', '2', '3') ), evidence=(mitosis=='3'), n=10^6) # .006
bn.fit.barchart(bn.mle1$class, main = "Class", xlab = "", ylab = "")
?bn.fit.barchart
bn.fit.dotplot(bn.mle1$class, main = "Class", xlab = "", ylab = "")
bn.fit.dotplot(bn.bayes2$class, main = "recurrance", xlab = "", ylab = "")
bn.bayes2
bn.fit.dotplot(bn.bayes2$recurrance, main = "recurrance", xlab = "", ylab = "")
bn.fit.dotplot(bn.bayes2$deg_malig, main = "recurrance", xlab = "", ylab = "")
bn.fit.dotplot(bn.bayes2$recurrance, main = "recurrance", xlab = "", ylab = "")
bn.fit.dotplot(bn.mle1$marginal_adhesion, main = "Class", xlab = "", ylab = "")
bn.fit.dotplot(bn.mle1$uniformity_of_cell_shape, main = "Class", xlab = "", ylab = "")
bn.fit.dotplot(bn.mle1$uniformity_of_cell_shape, main = "Uniformity of Cell Shape", xlab = "", ylab = "")
bn.fit.dotplot(bn.mle1$uniformity_of_cell_shape, main = "Uniformity of Cell Shape | class, unifromity of cell size", xlab = "", ylab = "")
bn.fit.dotplot(bn.mle1$uniformity_of_cell_shape, main = "Uniformity of Cell Shape | class, unifromity of cell size", xlab = "", ylab = "")
bn.fit.dotplot(bn.bayes2$recurrance, main = "recurrance", xlab = "", ylab = "")
bn.fit.dotplot(bn.bayes2$recurrance, main = "Recurrance | Degree of Malignance", xlab = "", ylab = "")
graphviz.plot(learned_wpbc_dag, shape='ellipse', layout='dot')
graphviz.plot(learned_dag_tabu, layout='circo', shape='ellipse')
graphviz.plot(learned_wpbc_dag, shape='ellipse', layout='dot')
graphviz.plot(learned_wpbc_dag, shape='ellipse', layout='neato')
graphviz.plot(learned_wpbc_dag, shape='ellipse', layout='fdp')
wdbc
ncol(wdbc)
colnames(wdbc)
wwdbc_d <- as.data.table(discretize(wpbc[,2:32], method = 'quantile', breaks=c(rep(3, 32), 2)))
wwdbc_d <- as.data.table(discretize(wpbc[,2:32], method = 'quantile', breaks=c(rep(3, 31))))
learned_wdbc_dag <- rsmax2(wdbc_d, restrict = "si.hiton.pc", test = "x2", maximize = "tabu", score = "bde", maximize.args = list(iss = 5), alpha = 0.05)
wdbc_d <- as.data.table(discretize(wpbc[,2:32], method = 'quantile', breaks=c(rep(3, 31))))
learned_wdbc_dag <- rsmax2(wdbc_d, restrict = "si.hiton.pc", test = "x2", maximize = "tabu", score = "bde", maximize.args = list(iss = 5), alpha = 0.05)
graphviz.plot(learned_wdbc_dag, shape='ellipse', layout='fdp')
graphviz.plot(learned_wpbc_dag, shape='ellipse', layout='fdp')
save.image("C:/Users/piotr/Google Drive/BIME 550/Project4/code/BayesNetApproach/breastCancer/Final.RData")
hc
?hc
tabu
?tabu
bn.fit
?bn.fit
