{
    "collab_server" : "",
    "contents" : "# source(\"http://bioconductor.org/biocLite.R\")\n# biocLite(c(\"graph\", \"Rgraphviz\", \"RBGL\"))\n# install.packages(\"gRain\", 'bnlearn')\n\nlibrary(bnlearn)\nlibrary(graph)\nlibrary(Rgraphviz)\nlibrary(RBGL)\nlibrary(gRain)\n\n\n# Set up: Age, Sex, Education, Occupation, Residence, Travel\ndag <- empty.graph(nodes = c(\"A\", \"S\", \"E\", \"O\", \"R\", \"T\"))\n\n# Set up arcs\ndag <- set.arc(dag, from = \"A\", to = \"E\")\ndag <- set.arc(dag, from=\"S\", to = \"E\")\n\ndag <- set.arc(dag, from ='E', to=\"O\")\ndag <- set.arc(dag, from=\"E\", to=\"R\")\n\ndag <- set.arc(dag, from='O', to='T')\ndag <- set.arc(dag, from=\"R\", to=\"T\")\n\nmodelstring(dag)\ngraphviz.plot(dag, shape='ellipse')\n\n# Use matrix to set arcs\ndag2 <- empty.graph(nodes = c(\"A\", \"S\", \"E\", \"O\", \"R\", \"T\"))\narc_matrix <- arcs(dag)\narcs(dag2) <- arc_matrix\n\n# Ensures DAG:\ntry(set.arc(dag, from='T', to=\"E\"))\n\n# Set Variable Levels\nA.lv <- c(\"young\", \"adult\", \"old\")\nS.lv <- c(\"M\", \"F\")\nE.lv <- c(\"high\", \"uni\")\nO.lv <- c(\"emp\", \"self\")\nR.lv <- c(\"small\", \"big\")\nT.lv <- c(\"car\", \"train\", \"other\")\n\n# Variables not linked by arc are conditionally independent:\n# Pr(A, S, E, O, R, T) = Pr(A) Pr(S) Pr(E | A, S) Pr(O | E) Pr(R | E) Pr(T | O, R).\n\n# Given this, set probabilites:\nA.prob <- array(c(0.30, 0.50, 0.20), dim = 3, dimnames = list(A = A.lv))\nS.prob <- array(c(0.60, 0.40), dim = 2, dimnames = list(S = S.lv))\n\nO.prob <- array(c(0.96, 0.04, 0.92, 0.08), dim = c(2, 2), dimnames = list(O = O.lv, E = E.lv))\nR.prob <- array(c(0.25, 0.75, 0.20, 0.80), dim = c(2, 2), dimnames = list(R = R.lv, E = E.lv))\n\nE.prob <- array(c(0.75, 0.25, 0.72, 0.28, 0.88, 0.12, 0.64, 0.36, 0.70, 0.30, 0.90, 0.10), dim = c(2, 3, 2), dimnames = list(E = E.lv, A = A.lv, S = S.lv))\nT.prob <- array(c(0.48, 0.42, 0.10, 0.56, 0.36, 0.08, 0.58, 0.24, 0.18, 0.70, 0.21, 0.09), dim = c(3, 2, 2), dimnames = list(T = T.lv, O = O.lv, R = R.lv))\n\n# Recreate DAG using modelstring\ndag3 <- model2network(\"[A][S][E|A:S][O|E][R|E][T|O:R]\")\nall.equal(dag, dag3)\n\n# Local Probability Distributions\ncpt <- list(A=A.prob, S = S.prob, E = E.prob, O = O.prob, R = R.prob, T = T.prob)\n\n# Combine dag and prob dists into a bayes network:\nbn <- custom.fit(dag, cpt)\n\n# Some useful fns\narcs(bn)\nnparams(bn)\nbn$R\nbn\nplot(bn)\n\n# The code above assumes we know the graph structure AND conditional probabilites\n\n\n",
    "created" : 1489195461039.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2941210572",
    "id" : "D0CDF3D1",
    "lastKnownWriteTime" : 1489201269,
    "last_content_update" : 1489201269828,
    "path" : "C:/Users/piotr/Google Drive/BIME 550/Project4/code/BayesNetApproach/tutorial/tutorial.R",
    "project_path" : "tutorial.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}