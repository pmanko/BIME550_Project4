{
    "collab_server" : "",
    "contents" : "library(bnlearn)\nlibrary(graph)\nlibrary(Rgraphviz)\nlibrary(RBGL)\nlibrary(gRain)\nlibrary(mice)\nlibrary(data.table)\n\n# Load Datasets:\n\n## Wisconsin\n\n# https://shiring.github.io/machine_learning/2017/01/15/rfe_ga_post\n\n### breast-cancer-wisconsin\n#  Attribute                     Domain\n# -- -----------------------------------------\n#   1. Sample code number            id number\n# 2. Clump Thickness               1 - 10\n# 3. Uniformity of Cell Size       1 - 10\n# 4. Uniformity of Cell Shape      1 - 10\n# 5. Marginal Adhesion             1 - 10\n# 6. Single Epithelial Cell Size   1 - 10\n# 7. Bare Nuclei                   1 - 10\n# 8. Bland Chromatin               1 - 10\n# 9. Normal Nucleoli               1 - 10\n# 10. Mitoses                       1 - 10\n# 11. Class:                        (2 for benign, 4 for malignant)\n\nwisconsin <- as.data.table(read.table(\"\", header = FALSE, sep = \",\"))\ncolnames(wisconsin) <- c(\"sample_code_number\", \"clump_thickness\", \"uniformity_of_cell_size\", \"uniformity_of_cell_shape\", \"marginal_adhesion\", \"single_epithelial_cell_size\", \"bare_nuclei\", \"bland_chromatin\", \"normal_nucleoli\", \"mitosis\", \"classes\")\nwisconsin$classes <- ifelse(wisconsin$classes == \"2\", \"benign\", ifelse(wisconsin$classes == \"4\", \"malignant\", NA))\nwisconsin[wisconsin == \"?\"] <- NA\n\n# impute missing data\nwisconsin[,2:10] <- apply(wisconsin[, 2:10], 2, function(x) as.numeric(as.character(x)))\ndataset_impute <- mice(wisconsin[, 2:10],  print = FALSE)\nwisconsin <- cbind(wisconsin[, 11, drop = FALSE], mice::complete(dataset_impute, 1))\nwisconsin$classes <- as.factor(wisconsin$classes)\n\n# 1) ID number\n# 2) Outcome (R = recur, N = nonrecur)\n# 3) Time (recurrence time if field 2 = R, disease-free time if \n#          field 2\t= N)\n# 4-33) Ten real-valued features are computed for each cell nucleus:\n#   \n#   a) radius (mean of distances from center to points on the perimeter)\n# b) texture (standard deviation of gray-scale values)\n# c) perimeter\n# d) area\n# e) smoothness (local variation in radius lengths)\n# f) compactness (perimeter^2 / area - 1.0)\n# g) concavity (severity of concave portions of the contour)\n# h) concave points (number of concave portions of the contour)\n# i) symmetry \n# j) fractal dimension (\"coastline approximation\" - 1)\n# \n# Several of the papers listed above contain detailed descriptions of\n# how these features are computed. \n# \n# The mean, standard error, and \"worst\" or largest (mean of the three\n#                                                   largest values) of these features were computed for each image,\n# resulting in 30 features.  For instance, field 4 is Mean Radius, field\n# 14 is Radius SE, field 24 is Worst Radius.\n# \n# Values for features 4-33 are recoded with four significant digits.\n# \n# 34) Tumor size - diameter of the excised tumor in centimeters\n# 35) Lymph node status - number of positive axillary lymph nodes\n# observed at time of surgery\n\n\n### wdbc\nwdbc <- as.data.table(read.table(\"dat/wdbc.data\", header = FALSE, sep = \",\"))\n\nphenotypes <- rep(c(\"radius\", \"texture\", \"perimeter\", \"area\", \"smoothness\", \"compactness\", \"concavity\", \"concave_points\", \"symmetry\", \"fractal_dimension\"), 3)\ntypes <- rep(c(\"mean\", \"se\", \"largest_worst\"), each = 10)\n\ncolnames(wdbc) <- c(\"ID\", \"diagnosis\", paste(phenotypes, types, sep = \"_\"))\n\n### wpbc\n\nwpbc <- read.table(\"data/wpbc.data\", header = FALSE, sep = \",\")\ncolnames(wpbc) <- c(\"ID\", \"outcome\", \"time\", paste(phenotypes, types, sep = \"_\"), \"tumor_size\", \"lymph_node_status\")\nwpbc[wpbc == \"?\"] <- NA\n\n# impute missing data\nwpbc[,3:35] <- apply(wpbc[,3:35], 2, function(x) as.numeric(as.character(x)))\ndataset_impute <- mice(wpbc[,3:35],  print = FALSE)\nwpbc <- cbind(wpbc[, 2, drop = FALSE], mice::complete(dataset_impute, 1))\n\n\n## UCI\n\n## BCSC\n\n### Risk Estimate\n\n#### Multiple (risk.txt)\n\n#### Single (risk_rand.txt)\n\n### Risk Factor\n\n### Mamogram\n\n\n",
    "created" : 1489342229237.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1012632709",
    "id" : "C03BE08F",
    "lastKnownWriteTime" : 1489354266,
    "last_content_update" : 1489354266504,
    "path" : "C:/Users/piotr/Google Drive/BIME 550/Project4/code/BayesNetApproach/breastCancer/loadData.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}